# Generated by Django 2.2 on 2019-08-29 17:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import mvp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('nombre', models.CharField(max_length=25, verbose_name='Nombre')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Total')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeroPedido', models.CharField(max_length=25, unique=True)),
                ('estado', models.CharField(choices=[('EnProceso', 'En proceso'), ('Realizado', 'Realizado'), ('Cancelado', 'Cancelado')], default='EnProceso', max_length=20, verbose_name='Estado del pedido')),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('carrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carritoPedido', to='mvp.Carrito')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('foto', models.FileField(blank=True, null=True, upload_to=mvp.models.fotoProductos_directory_path, verbose_name='Foto')),
                ('tipo', models.CharField(choices=[('Verduras', 'Verduras'), ('Frutas', 'Frutas'), ('Panadería y bollería', 'Panadería y bollería'), ('Legumbres', 'Legumbres'), ('Pastas y arroces', 'Pastas y arroces'), ('Harinas, cereales y semillas', 'Harinas, cereales y semillas'), ('Frutos secos y deshidratados', 'Frutos secos y deshidratados'), ('Lácteos, yogures y huevos', 'Lácteos, yogures y huevos'), ('Aceites, condimentos y sal', 'Aceites, condimentos y sal'), ('Azúcar y miel', 'Azúcar y miel'), ('Conservas y mermeladas', 'Conservas y mermeladas'), ('Zumos, cafés y bebidas', 'Zumos, cafés y bebidas'), ('Infusiones, tés y aromáticas', 'Infusiones, tés y aromáticas'), ('Vinos, cervezas y licores', 'Vinos, cervezas y licores'), ('Chocolate, aperitivos y dulces', 'Chocolate, aperitivos y dulces'), ('Higiene personal', 'Higiene personal'), ('Productos de limpieza', 'Productos de limpieza'), ('Alimentación infantil', 'Alimentación infantil'), ('Ropa y textil', 'Ropa y textil')], max_length=30, verbose_name='Tipo de producto')),
                ('certificacion', models.CharField(choices=[('Ecológico', 'Ecológico'), ('Kilómetro cero', 'Kilómetro cero')], max_length=15, verbose_name='Certificación')),
                ('precioUnidad', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Precio')),
                ('unidadMedida', models.CharField(choices=[('€/Kg.', '€/Kg.'), ('€/250gr.', '€/250gr.'), ('€/500gr.', '€/500gr.'), ('€/Ud.', '€/Ud.'), ('€/Manojo', '€/Manojo'), ('€/l.', '€/l.'), ('€/250ml.', '€/250ml.'), ('€/500ml.', '€/500ml.')], max_length=10, verbose_name='Unidad de medida')),
                ('stock', models.CharField(choices=[('Sí', 'Sí'), ('No', 'No')], default='Sí', max_length=2, verbose_name='Stock')),
                ('infoAdicional', models.TextField(blank=True, help_text='Describe el producto', max_length=500, null=True, verbose_name='Descripción')),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('mvp.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Consumidor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('mvp.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Productor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nombreEmpresa', models.CharField(max_length=50, verbose_name='Nombre de empresa')),
                ('descripcion', models.TextField(help_text='Describe tu empresa', max_length=500, verbose_name='Descripción')),
                ('telefono', models.CharField(max_length=9, verbose_name='Teléfono')),
                ('fotoLogo', models.FileField(blank=True, null=True, upload_to=mvp.models.fotoLogo_directory_path, verbose_name='Logo')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('mvp.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Mensajeria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, verbose_name='Título')),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('comentario', models.TextField(max_length=500, verbose_name='Comentario')),
                ('leido', models.BooleanField(default=False, verbose_name='Leído')),
                ('emisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajesEnviados', to=settings.AUTH_USER_MODEL)),
                ('receptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajesRecibidos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TipoRecogida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direccion', models.TextField(max_length=100, verbose_name='Dirección')),
                ('diasYHoras', models.TextField(help_text='Escriba los días y horas de recogida. Por ejemplo: L --> 10:30 a 14:30, M --> 9:00 a 17:30', max_length=500, verbose_name='Días y horas de recogida')),
                ('productor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiporecogida', to='mvp.Productor')),
            ],
        ),
        migrations.CreateModel(
            name='ReseñaProductor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('calificacion', models.CharField(choices=[('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('1', '1')], default='1', max_length=1, verbose_name='Calificación')),
                ('comentario', models.TextField(help_text='Escriba su comentario', max_length=200, verbose_name='Comentario')),
                ('consumidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñasConsumidor', to='mvp.Consumidor')),
                ('productor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñasProductor', to='mvp.Productor')),
            ],
        ),
        migrations.CreateModel(
            name='ReseñaProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('calificacion', models.CharField(choices=[('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('1', '1')], default='1', max_length=1, verbose_name='Calificación')),
                ('comentario', models.TextField(help_text='Escriba su comentario', max_length=200, verbose_name='Comentario')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñasProducto', to='mvp.Producto')),
                ('consumidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñasProducto', to='mvp.Consumidor')),
            ],
        ),
        migrations.AddField(
            model_name='producto',
            name='productor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos', to='mvp.Productor'),
        ),
        migrations.CreateModel(
            name='PedidoAProductor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('visto', models.BooleanField(default=False, verbose_name='Visto')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Total')),
                ('pedido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mvp.Pedido')),
                ('productor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mvp.Productor')),
            ],
        ),
        migrations.AddField(
            model_name='pedido',
            name='consumidor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pedidosConsumidor', to='mvp.Consumidor'),
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precioTotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Total')),
                ('paypalId', models.CharField(max_length=100, null=True)),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mvp.Pedido')),
                ('consumidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mvp.Consumidor')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCarrito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=1, verbose_name='Cantidad')),
                ('precioTotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='PrecioTotal')),
                ('carrito', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mvp.Carrito')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mvp.Producto')),
                ('productor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mvp.Productor')),
            ],
        ),
        migrations.CreateModel(
            name='Geolocalizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitud', models.FloatField()),
                ('longitud', models.FloatField()),
                ('productor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geolocalizacion', to='mvp.Productor')),
            ],
        ),
        migrations.CreateModel(
            name='FormaCobro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoCobro', multiselectfield.db.fields.MultiSelectField(choices=[('Efectivo', 'Efectivo'), ('Tarjeta de credito', 'Tarjeta de crédito'), ('Contra reembolso', 'Contra reembolso')], max_length=60)),
                ('productor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formaCobro', to='mvp.Productor')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=150, verbose_name='Título')),
                ('fechaHora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('articulo', models.TextField(help_text='Escriba el artículo', max_length=5000, verbose_name='Artículo')),
                ('foto', models.FileField(blank=True, null=True, upload_to=mvp.models.fotoBlog_directory_path, verbose_name='Foto')),
                ('administrador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to='mvp.Administrador')),
            ],
        ),
    ]
